filesystem_thresholds = (70.0, 90.0)

def humansize(nbytes):
    suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB']
    if nbytes == 0: return '0 B'
    i = 0
    while nbytes >= 1024 and i < len(suffixes)-1:
        nbytes /= 1024.
        i += 1
    f = ('%.2f' % nbytes).rstrip('0').rstrip('.')
    return '%s %s' % (f, suffixes[i])

def inventory_filesystem(info):
    inventory = []
    for line in info:
        inventory.append((line[0], filesystem_thresholds))
    return inventory

def check_filesystem(item, params, info):
    warn, crit = params
    for name, level, total_space, used_space, percentage_used_space in info:
        if name == item:
            used_space = float(used_space) * 1024
            total_space = float(total_space) * 1024
            warn_level = round(float(float(total_space) * float(warn)) / 100.0, 2)
            crit_level = round(float(float(total_space) * float(crit)) / 100.0, 2)
            perfdata = [("size", used_space, warn_level, crit_level, 0, total_space) ]
            if float(percentage_used_space) > float(crit):
                return 2, "%s/%s (%s %%) disk space used" %(humansize(used_space), humansize(total_space), str(percentage_used_space)), perfdata
            elif float(percentage_used_space) > float(warn):
                return 1, "%s/%s (%s %%) disk space used" %(humansize(used_space), humansize(total_space), str(percentage_used_space)), perfdata
            else:
                return 0, "%s/%s (%s %%) disk space used" %(humansize(used_space), humansize(total_space), str(percentage_used_space)), perfdata
    return (3, "Something weird happens")

check_info["filesystem"] = {
    "check_function"        : check_filesystem,
    "inventory_function"    : inventory_filesystem,
    "service_description"   : "Filesystem %s",
    "snmp_info"             : ( ".1.3.6.1.4.1.2021.9.1", [ "2", "5", "6", "8", "9" ] ),
    "has_perfdata"          : True,
}

